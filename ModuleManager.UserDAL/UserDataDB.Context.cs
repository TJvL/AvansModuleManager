//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ModuleManager.UserDAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class UserContext : DbContext
    {
        public UserContext()
            : base("name=UserContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<SysteemRol> SysteemRol { get; set; }
        public virtual DbSet<User> User { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<Nullable<int>> spAuthenticateUser(string userName, string password)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spAuthenticateUser", userNameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spEditUser(string oldUserNaam, string newUserNaam, string wachtwoord, string systeemRol, string email, string naam, Nullable<bool> blocked)
        {
            var oldUserNaamParameter = oldUserNaam != null ?
                new ObjectParameter("OldUserNaam", oldUserNaam) :
                new ObjectParameter("OldUserNaam", typeof(string));
    
            var newUserNaamParameter = newUserNaam != null ?
                new ObjectParameter("NewUserNaam", newUserNaam) :
                new ObjectParameter("NewUserNaam", typeof(string));
    
            var wachtwoordParameter = wachtwoord != null ?
                new ObjectParameter("Wachtwoord", wachtwoord) :
                new ObjectParameter("Wachtwoord", typeof(string));
    
            var systeemRolParameter = systeemRol != null ?
                new ObjectParameter("SysteemRol", systeemRol) :
                new ObjectParameter("SysteemRol", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var naamParameter = naam != null ?
                new ObjectParameter("naam", naam) :
                new ObjectParameter("naam", typeof(string));
    
            var blockedParameter = blocked.HasValue ?
                new ObjectParameter("Blocked", blocked) :
                new ObjectParameter("Blocked", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spEditUser", oldUserNaamParameter, newUserNaamParameter, wachtwoordParameter, systeemRolParameter, emailParameter, naamParameter, blockedParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spRegisterUser(string userNaam, string wachtwoord, string systeemRol, string email, string naam)
        {
            var userNaamParameter = userNaam != null ?
                new ObjectParameter("UserNaam", userNaam) :
                new ObjectParameter("UserNaam", typeof(string));
    
            var wachtwoordParameter = wachtwoord != null ?
                new ObjectParameter("Wachtwoord", wachtwoord) :
                new ObjectParameter("Wachtwoord", typeof(string));
    
            var systeemRolParameter = systeemRol != null ?
                new ObjectParameter("SysteemRol", systeemRol) :
                new ObjectParameter("SysteemRol", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var naamParameter = naam != null ?
                new ObjectParameter("naam", naam) :
                new ObjectParameter("naam", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spRegisterUser", userNaamParameter, wachtwoordParameter, systeemRolParameter, emailParameter, naamParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> RegisterUser(string userNaam, string wachtwoord, string systeemRol, string email, string naam)
        {
            var userNaamParameter = userNaam != null ?
                new ObjectParameter("UserNaam", userNaam) :
                new ObjectParameter("UserNaam", typeof(string));
    
            var wachtwoordParameter = wachtwoord != null ?
                new ObjectParameter("Wachtwoord", wachtwoord) :
                new ObjectParameter("Wachtwoord", typeof(string));
    
            var systeemRolParameter = systeemRol != null ?
                new ObjectParameter("SysteemRol", systeemRol) :
                new ObjectParameter("SysteemRol", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var naamParameter = naam != null ?
                new ObjectParameter("naam", naam) :
                new ObjectParameter("naam", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("RegisterUser", userNaamParameter, wachtwoordParameter, systeemRolParameter, emailParameter, naamParameter);
        }
    
        public virtual ObjectResult<string> spGetRol(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spGetRol", userNameParameter);
        }
    }
}
